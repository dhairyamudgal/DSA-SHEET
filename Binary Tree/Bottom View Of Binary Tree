
vector<int> bottomView(BinaryTreeNode<int> * root){
    vector<int> ans;
     if (root == NULL) {
        return ans;
    }

    map<int, int> horizontalDistance;  
    queue<pair<BinaryTreeNode<int>*, int>> q; 
    q.push({root, 0});  
    while (!q.empty()) {
        BinaryTreeNode<int>* node = q.front().first;
        int hd = q.front().second;
        q.pop();

    horizontalDistance[hd] = node->data;
        if (node->left != NULL) {
            q.push({node->left, hd - 1});
        }
        
        if (node->right != NULL) {
            q.push({node->right, hd + 1});
        }
    }

    for (auto it : horizontalDistance) {
        ans.push_back(it.second);
    }

    return ans;

    
}

